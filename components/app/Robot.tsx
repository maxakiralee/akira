/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useState, useEffect } from 'react'
import { useGLTF, Html } from '@react-three/drei'
import * as THREE from 'three'

export function Model(props: { isSpeaking: boolean } & JSX.IntrinsicElements['group']) {
  const { nodes } = useGLTF('/models/robot.glb')
  const [mouthImage, setMouthImage] = useState('/images/mouthCloseHappy.png')

  useEffect(() => {
    if (props.isSpeaking) {
      const interval = setInterval(() => {
        setMouthImage((prev) =>
          prev === '/images/mouthCloseHappy.png'
            ? '/images/mouthOpenHappy.png'
            : '/images/mouthCloseHappy.png'
        )
      }, 100) // Toggles every 0.1 seconds
      return () => clearInterval(interval)
    } else {
      setMouthImage('/images/mouthCloseHappy.png')
    }
  }, [props.isSpeaking])

  const mesh = nodes.geometry_0 as THREE.Mesh

  return (
    <group {...props} dispose={null} scale={2} position={[0, -1.5, 0]}>
      <mesh
        castShadow
        receiveShadow
        geometry={mesh.geometry}
        material={mesh.material}
      >
        <meshStandardMaterial color="pink" />
      </mesh>
      <Html position={[0, 0.15, 0]} transform>
        <img src={mouthImage} alt="mouth" width="10" />
      </Html>
    </group>
  )
}

useGLTF.preload('/models/robot.glb')
